package practica3;

import java.util.Iterator;
import java.util.List;

public class GeneralTree<T> {
	
	private T data;
	
	private List<GeneralTree<T>> children;
	
	public GeneralTree() {}
	
	public GeneralTree(T data) {
		this.data = data;
	}
	
	public GeneralTree(T data, List<GeneralTree<T>> children) {
		this.data = data;
		this.children = children;
	}
	
	public T getData() {
		return this.data;
	}
	
	public void setData(T data) {
		this.data = data;
	}

	public List<GeneralTree<T>> getChildren() {
		return children;
	}

	public void setChildren(List<GeneralTree<T>> children) {
		if (children != null)
			this.children = children;
	}
	
	public void addChild(GeneralTree<T> child) {
		this.children.add(child);
	}
		
	public boolean isLeaf() {
		return !hasChildren();
	}
	
	public boolean hasChildren() {
		return children != null && !children.isEmpty();
	}
	
	public void removeChildren(GeneralTree<T> child) {
		if (this.hasChildren()) {
			children.remove(child);
		}
	}
	
	public void preOrden() {
		System.out.println(getData());
		
		List<GeneralTree<T>> children = this.getChildren();
		
		for(GeneralTree<T> child : children) {
			child.preOrden();
		} 		
	}
	
	public GeneralTree<Integer> generateTree(int length) 
	{
		
		GeneralTree<Integer> tree = new GeneralTree<Integer>();
		tree.addChild(generateTree);
		
		
		
	}
				
}
